{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","src","alt","height","width","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c63df19.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className='resume-container'>\n                <div className='resume-header-wrap'>\n                    <div className='left-col'>\n                        <h1 className='resume-header'>\n                            Oksana Samkova-Plattner\n                        </h1>\n                        <div className='contacts-container'>\n                            <div className='contacts-row'>\n                                <div className='icon-wrap'>\n                                    <span className='icon icon-home-solid'/>\n                                </div>\n                                <span className='contacts-cell-item'>Queens, NY</span>\n                            </div>\n                            <div className='contacts-row'>\n                                <div className='icon-wrap'>\n                                    <span className='icon icon-phone-solid'/>\n                                </div>\n                                <span className='contacts-cell-item'>(347) 517-5844</span>\n                            </div>\n                            <div className='contacts-row'>\n                                <div className='icon-wrap'>\n                                    <span className='icon icon-envelope-solid'/>\n                                </div>\n                                <span className='contacts-cell-item'>oksasamkova@gmail.com</span>\n                            </div>\n                            <div className='contacts-row'>\n                                <div className='icon-wrap'>\n                                    <span className='icon icon-github-brands'/>\n                                </div>\n                                <span className='contacts-cell-item'>https://github.com/osamkova</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='right-col'>\n                        <div className='photo-wrap'>\n                            <img src='https://s3.us-east-2.amazonaws.com/oksanas-misc-photos/IMG_4183.jpg' alt='headshot' height=\"100\" width=\"100\"/>\n                        </div>\n                    </div>\n                </div>\n                <div className='resume'>\n                    <div className='left-col'>                        \n                        <div className='about-container'>\n                            <h4>About</h4>\n                            <p>\n                                Front-end engineer with a passion for problem solving. \n                                Inventive, curious and self-taught I find the javascript ecosystem to be the perfect playground. \n                                Looking for a team to push my skills into the next level.\n                            </p>\n                        </div>\n\n                        <div className='experience-container'>\n                            <h4>Experience</h4>\n                            <div className='experience-item'>\n                                <div className='experience-title'>\n                                    <span className='company-name'>Greystone & Co</span>\n                                    <span className='date-place'>Jul 2017 - Present</span>\n                                </div>\n                                <div className='experience-title'>\n                                    <span className='position'>Software Engineer</span>\n                                    <span className='date-place'>New York, NY</span>\n                                </div>\n                                <div className='description'>\n                                    Collaborated on the front-end of our underwriting AI technology that helped to process over 2 billion in loans. \n                                    My focus was on optimizing the user experience, developing custom features/components, state management and \n                                    implementing unit tests using Jest and Enzyme.\n                                    <p className='cursive'>Technologies used: React/Redux, Jest/Enzyme</p>\n                                </div>\n                            </div>\n                            <div className='experience-item'>\n                                <div className='experience-title'>\n                                    <span className='company-name'>Greystone & Co</span>\n                                    <span className='date-place'>Jan 2016 - Jul 2017</span>\n                                </div>\n                                <div className='experience-title'>\n                                    <span className='position'>Jr. Software Engineer</span>\n                                    <span className='date-place'>New York, NY</span>\n                                </div>\n                                <div className='description'>\n                                    Maintained in-house software written in ReactJS. \n                                    Wrote custom plugins for Salesforce to enhance user interaction.\n                                    Collaborated with end users to make the product more responsive to their needs.\n                                    Developed automated loan approval application, creating cost savings and\n                                    cutting loan approval process from one year to several weeks.\n                                    <p className='cursive'>Technologies used: JavaScript, React/Redux, Apex, SOQL</p>\n                                </div>\n                            </div>\n                            <div className='experience-item'>\n                                <div className='experience-title'>\n                                    <span className='company-name'>Greystone & Co</span>\n                                    <span className='date-place'>Aug 2013 - Jan 2016</span>\n                                </div>\n                                <div className='experience-title'>\n                                    <span className='position'>Lead QA</span>\n                                    <span className='date-place'>New York, NY</span>\n                                </div>\n                                <div className='description'>\n                                    Served as a lead quality assurance engineer for an in-house team developing due diligence app for a major commercial mortgage lender. \n                                    Defined and implemented an automated test suite from the scratch which greatly improved robustness and reliability of the app. \n                                    Supervised and mentored junior team members.\n\n                                    <p className='cursive'>Technologies used: GhostInspector, Selenium, NightwatchJS/Browserstack</p>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div className='right-col'>\n                        <div className='skills-container'>\n                            <h4>Skills</h4>\n                        </div>\n                        <div className='education-container'>\n                            <h4>Education</h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}